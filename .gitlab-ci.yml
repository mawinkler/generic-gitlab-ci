image: docker:stable

stages:
  - release
  - test
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

services:
  - name: docker:dind

release:
  stage: release
  before_script:
    - apk add --no-cache curl jq python py-pip
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:latest || true
    - docker build --cache-from ${CI_REGISTRY_IMAGE}:latest --tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} --tag ${CI_REGISTRY_IMAGE}:latest .
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    - docker push ${CI_REGISTRY_IMAGE}:latest
  only:
    - tags
  tags:
    - docker

test:
  variables:
    POLL_INTERVAL: 2
    POLL_RETRIES: 300
  stage: test
  image: marwinsworld.online:4567/markus/scmanager:latest
  script:
    - python /app/scmanager.py
    - if [ $? -eq "0" ] ; then touch clean ; fi
  artifacts:
    paths:
      - clean
      - scan_report.json
  only:
    - tags
  tags:
    - docker

deploy:
  stage: deploy
  image: marwinsworld.online:4567/markus/k8sdeployer:latest
  environment: 'production'
  script:
    - if [ ! -f clean ] ; then exit 1 ; fi
    - kubectl create secret -n "$KUBE_NAMESPACE" docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="${CI_DEPLOY_USER:-$CI_REGISTRY_USER}" --docker-password="${CI_DEPLOY_PASSWORD:-$CI_REGISTRY_PASSWORD}" --docker-email="$GITLAB_USER_EMAIL" -o yaml --dry-run | kubectl replace -n "$KUBE_NAMESPACE" --force -f -
    - helm upgrade --debug --force --install --namespace ${KUBE_NAMESPACE} --wait --set image.get=${CI_COMMIT_TAG} ${CI_PROJECT_NAME} ./chart
  dependencies:
    - test
  only:
    - tags
  tags:
    - docker
